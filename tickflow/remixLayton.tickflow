// remixLayton.tickflow
//   Professor Layton medley by patataofcourse
//   Depends on the following includable files:
//     .
//     ├── include
//     │   ├── constants.tickflow
//     │   ├── remixTemplate.tickflow
//     │   └── test.tickflow (include commented out in the final game)
//     └── games
//         └── village.tickflow
//
//   To anyone who wants to merge this mod into a bigger modpack, please follow these conditions:
//     a. include source or a link to my release
//     b. if you include source and change the names of any includables, modify the directory tree above
//
// funny top hat man

// -------------
// --- SETUP ---
// -------------

// changing these should be enough to move everything (index, tempo, prologue, epilogue)
#index 0x59
LAYTON_index = 0x59
LAYTON_tempo = 0x01000068


#assets 0xFFFFFF00 // the assets sub is a social construct

// ----------------
// --- INCLUDES ---
// ----------------

// constants.tickflow ALWAYS comes first!
#include include/constants.tickflow

// Reference files such as stuff extracted from the original Remix Template 
#include include/remixTemplate.tickflow
#include include/test.tickflow

// Subdivisions of the main tickflow, one per section
#include games/village.tickflow

// -----------------
// --- MAIN GAME ---
// -----------------

start:
    set_cat 0

    // Common to initialization of all games: plays jingle, disables pausing, enables loading icon
    play_sfx 0x1000294
    rest 0xC
    play_sfx 0x100029B
    0x2D 0
    0x8C 1

    // 0xA6 determines whether the prologue screen will have a practice option (0 = A/X to skip, 1 = A to practice/X to skip).
    // 0xA4 is the index for the prologue
    0xA6 0
    0xA4 LAYTON_index

    // Runs prologue if you hadn't started over before
    0x75<1> 
    if 0
        0xA5 1
        0xA4<2> 1
        async_call prologue
    else 
        0xA6<1> 0
        0x75 0
    endif

    // idk what this does but it starts by setting tempo to 120?
    0x21 120
    speed 0x100
    input 0
    0x7C<3> 1
    if 0
        0x7C 1, 0, 0x18
    endif 
    0x7C<3> 2
    if 0
        0x7C 2, 0, 0x18
    endif 
    rest 0x18
    sub 5

    // load Curious Village
    call village_load
    rest 0xC

    // which epilogue index to use
    0xA8<1> LAYTON_index
    0xA8<4> LAYTON_index

    // "Leave all this alone." - ehg
    sub 9
    sub 6
    0x81 
    if 1
        0x81 
        if 1
            0x84<1> 
            label 0x321F
            rest 0xC
            0x81 
            if 1
                0x84<2> 2
                if 0
                    goto 0x321F
                endif 
            endif 
        endif 
        0x82 0x3E8
        rest 0xC
        label 0x3DB
        0x81 
        if 1
            0x82<1> 
            if 0
                rest 1
                goto 0x3DB
            endif 
        endif 
        rest_reset 
    endif 
    rest 0xC
    0x88 
    if 1
        0x8A<3> 1
    endif 
    0x2D 1

    //TODO: proper 0x2B setups (cant be bothered)
    0x2B 0, 6
    0x2B 0x16, 6
    0x2B 0x25, 6
    0x2B 0x3C, 6

    // i also don't know what this is
    0x21 120
    speed 0x100
    0xB1 
    engine<4> 1
    async_call assets_
    0x7C<1> 7, 1, 1
    fade 2, 1, 0

    // 0x8C X enables/disables the loading icon. 0 = disable, 1 = enable
    // 0x8E and 0x8F both determine which rating message the following code will be assigned to.
    // Use the "input" operation to determine whether you can input or not. 0 = cannot input, 1 = can input.
    0x8C 0
    0x8E 0
    0x8F 3
    input 1

    // Main sequence!

    call changeEngine
    engine SCENE_ctrTango
    sub 4
    0x29<2> 
    call tempoAndMusic
    async_call cowbellTest
    async_call startingGame
    rest 0xC0
    rest 0xC0
    rest 0xC0
    rest 0xA8

    call changeEngine
    engine SCENE_rvlRobot
    sub 4
    0x29<2> 
    async_call subNameHere
    rest 0x18
    rest 0xC0
    rest 0xC0
    rest 0xC0
    rest 0xA8

    call changeEngine
    engine SCENE_rvlManju
    sub 4
    0x29<2> 
    async_call subNameHere2
    rest 0x18
    rest 0xC0
    rest 0xC0
    rest 0xC0
    rest 0xA8

    // End the game, unload everything, and do results screen
    0x7C 7, 1, 0x28
    rest 0xC0
    play_sfx 0x100029F
    0x8C 1
    call unload
    0x2D 0
    // sub 0xB
    stop

//-----------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------


// Epilogue/rating asset loading, scoring configuration, and Challenge Land-related stuff activation.
assets_:
    set_cat 0
    0x92 3, 0x14
    0x93 3, 0x10, "remix_cp_RM_NRM_Hi", "remix_cp_RM_NRM_Ng"
    0x94 0, "result_common_Hi", "result_common_Ok", "result_common_Ng"
    0x95 0x10, "remix_caption"
    0x92 4, 0x14
    0x93 4, 0x10, "remix_cp_RM_KEP_Hi", "remix_cp_RM_KEP_Ng"
    0x94 0, "result_common_Hi", "result_common_Ok", "result_common_Ng"
    0x95 0x10, "remix_caption"
    0x92 5, 0x14
    0x93 5, 0x10, "remix_cp_RM_AIM_Hi", "remix_cp_RM_AIM_Ng"
    0x94 0, "result_common_Hi", "result_common_Ok", "result_common_Ng"
    0x95 0x10, "remix_caption"
    0x92 6, 0x14
    0x93 6, 0x10, "remix_cp_RM_RPT_Hi", "remix_cp_RM_RPT_Ng"
    0x94 0, "result_common_Hi", "result_common_Ok", "result_common_Ng"
    0x95 0x10, "remix_caption"
    0x92 7, 0x14
    0x93 7, 0x10, "remix_cp_STAR_Hi", "remix_cp_STAR_Ng"
    0x94 0, "result_common_Hi", "result_common_Ok", "result_common_Ng"
    0x95 0x10, "remix_caption"
    0x95 0x10, "remix_LED_caption"
    // If you include a Skill Star in your Remix, change the Y value of 0x98 X, Y to however many inputs are done while the Skill Star is forming. For example, Final Remix sets it to 4 because there are 4 hits needed for the last LumBEARjack object.
    0x98 1, 1
    rest 0x60
    0x88 
    if 1
        0x88<1> 
        if 1
            0x88<2> 
            switch 
                case 1
                    0x8A<4> 1, 1
                    break 
                case 2
                    0x8A<4> 1, 2
                    break 
                case 3
                    0x8A<4> 1, 3
                    break 
            endswitch 
        endif 
    else 
        0xAB<3> 1
        if 1
            0xAC 0
        else 
            0xAD 0
        endif 
    endif 
    stop 

// To replace game assets on the fly like in the medley remixes, use this sub template. You'll need to copy/paste this for multiple game asset swaps, also akin to the medley remixes.
// See this for notes and info about this template: https://pastebin.com/SDRELgnz
loadGAMENAME:
    remove_cellanim 2
    label 0x4D2
    cellanim_busy 2
    if 0
        goto 0x10E1
    endif 
    rest 1
    goto 0x4D2
    label 0x10E1
    set_cellanim 2, u"rom:/cellanim/[FILENAME].zlib", -1
    rest 0xC

    //remove_effect Y
    //label 0x458
    //effect_busy Y
    //if 0
    //	goto 0x83F
    //endif 
    //rest 1
    //goto 0x458
    //label 0x83F
    //set_effect Y, u"rom:/effect/[FILENAME].zlib", -1
    //rest 0xC

    //remove_layout Z
    //label 0x458
    //layout_busy Z
    //if 0
    //	goto 0x83F
    //endif 
    //rest 1
    //goto 0x458
    //label 0x83F
    //set_layout Z, u"rom:/layout/[FILENAME].zlib", -1
    //rest 0xC

    //has_model M
    //if 1
    //	remove_model M
    //endif 
    //rest 0xC
    //has_model M
    //if 0
    //	set_model M, u"rom:/model/[FILENAME].zlib", 1
    //endif 

    remove_sfx 1
    rest 0xC
    sub 3
    set_sfx 1, u"[GROUP_FILENAME]"
    rest 0xC

    game_cellanim 0, 2
    //game_effect E, Y
    //game_layout E, Z
    //game_model E, M
    stop 


//-----------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------

// This is the starting game. It has a slower fade-in than the other example subs, but that's about it.
// You may rename "startingGame" to whatever you want. If you rename it, make sure you call it by its new name in the main sequence, otherwise Tickompiler will crash when compiling.
startingGame:
    0x8F 3
    0x10C 0, -0x320, 0x5DC
    // If your game needs it, game setup that shouldn't be seen by the player goes here, before the fade command.
    fade<1> 7, 1, 0x30
    rest 0x60
    input 1
    stop


// Rename subNameHere to whatever you want.
subNameHere:
    0x8F 3
    // If your game needs it, pre-transition setup goes here, before the fade command.
    rest 0x18
    fade<1> 1, 1, 1
    input 1
    // Your game sequence goes here.
    stop 

subNameHere2:
    0x8F 3
    // If your game needs it, pre-transition setup goes here, before the fade command.
    rest 0x18
    fade<1> 1, 1, 1
    input 1
    // Your game sequence goes here.
    stop